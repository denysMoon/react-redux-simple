{"version":3,"sources":["components/Joke/Joke.jsx","components/Display/Display.jsx","redux/types.js","redux/action.js","App.js","reportWebVitals.js","redux/reducers/fetchReducer.js","redux/reducers/rootReducer.js","index.js"],"names":["Joke","joke","useSelector","state","className","src","icon_url","alt","value","Display","length","FETCH","fetchData","dispatch","getStore","a","axios","get","result","type","payload","data","App","useDispatch","useEffect","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAceA,EAZF,WACT,IAAMC,EAAOC,aAAY,SAAAC,GAAK,OAAEA,EAAMF,QACtC,OACI,sBAAKG,UAAU,OAAf,UACI,qBAAKC,IAAKJ,EAAKE,MAAMG,SAAUC,IAAI,UACnC,4BACKN,EAAKE,MAAMK,YCSbC,EAdC,WACZ,IAAMR,EAAOC,aAAY,SAAAC,GAAK,OAAEA,EAAMF,QAEtC,OACI,qBAAKG,UAAU,MAAf,SACI,4BAEoB,IAAhBH,EAAKS,OAAe,UAAY,cAAC,EAAD,S,yCCRjCC,EAFD,QCGDC,EAAY,WACrB,8CAAO,WAAMC,EAAUC,GAAhB,eAAAC,EAAA,sEACgBC,IAAMC,IAAI,2CAD1B,OACCC,EADD,OAGLL,EAAS,CACPM,KAAMR,EACNS,QAASF,EAAOG,OALb,2CAAP,yDC8BWC,MAxBf,WAEE,IAAMT,EAAWU,cAUjB,OAJAC,qBAAU,WACRX,EAASD,OACR,IAGD,qBAAKR,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,IACA,wBAAQqB,QAZE,WACdZ,EAASD,MAWL,wBCdOc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,eCLRQ,EAAe,GCCRC,EAAcC,YAAgB,CACvCpC,KDAwB,WAAmC,IAAlCE,EAAiC,uDAAzBgC,EAAcG,EAAW,uCAC1D,OAAOA,EAAOnB,MACZ,KAAKR,EACH,MAAO,CAAER,MAAOmC,EAAOlB,SACvB,QAAS,OAAOjB,MEGlBoC,EAAQC,YAAYJ,EAAaK,YACrCC,YACEC,KAEFC,OAAOC,8BAAgCD,OAAOC,iCAG9CC,IAASC,OACP,cAAC,IAAD,CAAUR,MAAOA,EAAjB,SACE,cAAC,IAAMS,WAAP,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM5BxB,M","file":"static/js/main.ac2cbdf9.chunk.js","sourcesContent":["import { useSelector } from 'react-redux';\r\n\r\nconst Joke = () =>{\r\n    const joke = useSelector(state=>state.joke)\r\n    return(\r\n        <div className=\"joke\">\r\n            <img src={joke.state.icon_url} alt=\"Chuck\" />\r\n            <p>\r\n                {joke.state.value}\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Joke","import { useSelector } from 'react-redux';\r\nimport Joke from '../Joke/Joke';\r\n\r\nconst Display = () =>{\r\n    const joke = useSelector(state=>state.joke)\r\n\r\n    return(\r\n        <div className=\"box\">\r\n            <p>\r\n                {\r\n                joke.length === 0 ? 'nothing' : <Joke />\r\n                }\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Display","const FETCH = 'FETCH'\r\n\r\nexport default FETCH","import axios from 'axios'\r\nimport FETCH from './types'\r\n\r\nexport const fetchData = () => {\r\n    return async(dispatch, getStore)=>{\r\n      const result = await axios.get('https://api.chucknorris.io/jokes/random')\r\n\r\n      dispatch({\r\n        type: FETCH,\r\n        payload: result.data\r\n      })\r\n    }\r\n  }","import './App.css';\n\nimport Display from './components/Display/Display'\n\nimport { useDispatch } from 'react-redux';\nimport { fetchData } from './redux/action'\n\nimport { useEffect } from 'react';\n\n\nfunction App() {\n\n  const dispatch = useDispatch()\n\n  const onClick = () =>{\n    dispatch(fetchData())\n  }\n\n  useEffect(()=>{\n    dispatch(fetchData())\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <Display />\n        <button onClick={onClick}>\n          More\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import FETCH from '../types'\r\n\r\nconst initialState = []\r\n\r\nexport const fetchReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n      case FETCH:\r\n        return { state: action.payload };\r\n        default: return state\r\n    }\r\n  }","import { combineReducers } from 'redux'\r\nimport { fetchReducer } from './fetchReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n    joke: fetchReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport thunk from 'redux-thunk'\nimport { createStore, compose, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport { rootReducer } from './redux/reducers/rootReducer'\n\nconst store = createStore(rootReducer, compose(\n  applyMiddleware(\n    thunk\n  ),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  ))\n\n  ReactDOM.render(\n    <Provider store={store}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Provider>,\n    document.getElementById('root')\n  );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}